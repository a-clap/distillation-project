package installer

import (
	"testing"

	"github.com/stretchr/testify/suite"
)

type InstallerInternalSuite struct {
	suite.Suite
}

func TestInstallerInternal(t *testing.T) {
	suite.Run(t, new(InstallerInternalSuite))
}

func (i *InstallerInternalSuite) TestFindSize() {
	const data = `Installing Artifact of size 162508800...`
	got, err := findSize(data)
	i.Require().Nil(err)
	i.Require().EqualValues(162508800, got)
}

func (i *InstallerInternalSuite) TestFindErr() {
	args := []struct {
		name    string
		line    string
		wantErr bool
	}{
		{
			name:    "from mender CLI",
			line:    "ERRO[0005] Error while installing Artifact from command line: Not able to open image file: blah: open blah: no such file or directory \n",
			wantErr: false,
		},
		{
			name:    "not an error",
			line:    "INFO[0000] Loaded configuration file: /var/lib/mender/mender.conf",
			wantErr: true,
		},
	}
	for _, args := range args {
		got, err := findErr(args.line)
		if args.wantErr {
			i.Require().NotNil(err, args.name)
			i.Require().Equal("", got, args.name)
			continue
		}
		i.Require().Nil(err, args.name)
		i.Require().Equal(args.line, got, args.name)
	}
}

func (i *InstallerInternalSuite) TestFindPercent() {
	r := i.Require()
	arg := []struct {
		name    string
		line    string
		percent int
		wantErr bool
	}{
		{
			name:    "1%",
			line:    `                                                                    1%`,
			percent: 1,
			wantErr: false,
		},
		{
			name:    "0%",
			line:    `                                                                    0%`,
			percent: 0,
			wantErr: false,
		},
		{
			name:    "no digits",
			line:    `                                                                     %`,
			percent: 0,
			wantErr: true,
		},
	}
	for _, arg := range arg {

		percent, err := findPercent(arg.line)
		if arg.wantErr {
			r.Equal(0, percent, arg.name)
			r.NotNil(err, arg.name)
			continue
		}
		r.Nil(err, arg.name)
		r.Equal(arg.percent, percent, arg.name)
	}
}

func (i *InstallerInternalSuite) TestEveryPercent() {
	testData := []string{
		"                                                                    1%",
		".                                                                   2%",
		".                                                                   3%",
		"..                                                                  4%",
		"...                                                                 5%",
		"...                                                                 6%",
		"....                                                                7%",
		".....                                                               8%",
		".....                                                               9%",
		"......                                                             10%",
		".......                                                            11%",
		".......                                                            12%",
		"........                                                           13%",
		".........                                                          14%",
		".........                                                          15%",
		"..........                                                         16%",
		"...........                                                        17%",
		"...........                                                        18%",
		"............                                                       19%",
		".............                                                      20%",
		".............                                                      21%",
		"..............                                                     22%",
		"..............                                                     23%",
		"...............                                                    24%",
		"................                                                   25%",
		"................                                                   26%",
		".................                                                  27%",
		"..................                                                 28%",
		"..................                                                 29%",
		"...................                                                30%",
		"....................                                               31%",
		"....................                                               32%",
		".....................                                              33%",
		"......................                                             34%",
		"......................                                             35%",
		".......................                                            36%",
		"........................                                           37%",
		"........................                                           38%",
		".........................                                          39%",
		"..........................                                         40%",
		"..........................                                         41%",
		"...........................                                        42%",
		"...........................                                        43%",
		"............................                                       44%",
		".............................                                      45%",
		".............................                                      46%",
		"..............................                                     47%",
		"...............................                                    48%",
		"...............................                                    49%",
		"................................                                   50%",
		".................................                                  51%",
		".................................                                  52%",
		"..................................                                 53%",
		"...................................                                54%",
		"...................................                                55%",
		"....................................                               56%",
		".....................................                              57%",
		".....................................                              58%",
		"......................................                             59%",
		".......................................                            60%",
		".......................................                            61%",
		"........................................                           62%",
		"........................................                           63%",
		".........................................                          64%",
		"..........................................                         65%",
		"..........................................                         66%",
		"...........................................                        67%",
		"............................................                       68%",
		"............................................                       69%",
		".............................................                      70%",
		"..............................................                     71%",
		"..............................................                     72%",
		"...............................................                    73%",
		"................................................                   74%",
		"................................................                   75%",
		".................................................                  76%",
		"..................................................                 77%",
		"..................................................                 78%",
		"...................................................                79%",
		"....................................................               80%",
		"....................................................               81%",
		".....................................................              82%",
		".....................................................              83%",
		"......................................................             84%",
		".......................................................            85%",
		".......................................................            86%",
		"........................................................           87%",
		".........................................................          88%",
		".........................................................          89%",
		"..........................................................         90%",
		"...........................................................        91%",
		"...........................................................        92%",
		"............................................................       93%",
		".............................................................      94%",
		".............................................................      95%",
		"..............................................................     96%",
		"...............................................................    97%",
		"...............................................................    98%",
		"................................................................   99%",
		"................................................................. 100%",
	}
	starts := 1
	for _, data := range testData {
		found, err := findPercent(data)
		i.Require().Nil(err, data)
		i.Require().Equal(starts, found, data)
		starts++
	}
}
